{"version":3,"sources":["components/dashboard/Notifications.jsx","components/projects/ProjectSummary.jsx","components/projects/ProjectList.jsx","components/dashboard/Dashboard.jsx","components/layout/SignedInLinks.jsx","store/actions/authActions.js","components/layout/SignedOutLinks.jsx","components/layout/Navbar.jsx","components/projects/ProjectDetails.jsx","components/projects/CreateProject.jsx","store/actions/projectActions.js","components/auth/SignIn.jsx","components/auth/SignUp.jsx","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["Notifications","props","notifications","className","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","to","Dashboard","this","auth","uid","Component","compose","connect","state","firestore","ordered","firebase","firestoreConnect","collection","orderBy","limit","dispatch","signOut","getState","getFirebase","then","type","profile","href","onClick","initials","SignedOutLinks","console","log","ownProps","match","params","data","CreateProject","handleChange","e","setState","target","value","handleSubmit","preventDefault","createProject","history","push","onSubmit","action","htmlFor","onChange","getFirestore","authorId","add","firstName","lastName","Date","catch","err","SignIn","email","password","signIn","authError","creds","credentials","signInWithEmailAndPassword","SignUp","signUp","newUser","createUserWithEmailAndPassword","resp","doc","set","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","message","projectReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rffProps","useFirestoreForProfile","config","userProfile","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.d58f8b53.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map((item) => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    <span className=\"pink-text\">{item.user}</span>\r\n                    <span> {item.content}</span>\r\n                    <div className=\"grey-text note-date\">\r\n                      {moment(item.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectSummary = ({ project }) => (\r\n  <div className=\"card z-depth-0 project-summary\">\r\n    <div className=\"card-content grey-text text-darken-3\">\r\n      <span className=\"card-title\">{project.title}</span>\r\n      <p>\r\n        Posted By {project.authorFirstName} {project.authorLastName}\r\n      </p>\r\n      <p className=\"grey-text\">\r\n        {moment(project.createdAt.toDate()).calendar()}\r\n      </p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&\r\n        projects.map((project) => (\r\n          <Link to={\"/project/\" + project.id} key={project.id}>\r\n            <ProjectSummary project={project} />\r\n          </Link>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from \"react\";\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    //firestoreConnect connects the component with firebase\r\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] }, // so that the database can be acessed through the state\r\n    { collection: \"notifications\", limit: 5, orderBy: [\"time\", \"desc\"] },\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\n\r\nconst SignedInLinks = (props) => {\r\n  const { profile } = props;\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <a href=\"/#\" onClick={props.signOut}>\r\n          Log Out\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","export const signIn = (credentials) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"LOGIN_ERROR\" }, err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    // const firestore = getFirebase().firestore();\r\n    const firestore = getFirestore();\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((resp) => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(resp.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0],\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"SIGNUP_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        {\" \"}\r\n        <NavLink to=\"/signup\">Sign Up</NavLink>{\" \"}\r\n      </li>\r\n      <li>\r\n        {\" \"}\r\n        <NavLink to=\"/signin\">Login</NavLink>{\" \"}\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          MarioPlan\r\n        </Link>\r\n        {auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectDetails = (props) => {\r\n  console.log(props);\r\n  const { project, auth } = props;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n            <div className=\"card-action grey lighten-4 grey-text\">\r\n              <div>\r\n                Posted By {project.authorFirstName} {project.authorLastName}\r\n              </div>\r\n              <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"container center\">\r\n      <p>Loading Projects...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  // console.log(state);\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  console.log(projects);\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(ProjectDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} action=\"\" className=\"white\">\r\n          <h3 className=\"grey-text text-darken-3\">Create New Project</h3>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input id=\"title\" type=\"text\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Content</label>\r\n            <textarea\r\n              className=\"materialize-textarea\"\r\n              id=\"content\"\r\n              onChange={this.handleChange}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    //make async call to the database\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date(),\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_PROJECT\", project });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} action=\"\" className=\"white\">\r\n          <h3 className=\"grey-text text-darken-3\">Sign In</h3>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input id=\"email\" type=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input id=\"password\" type=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} action=\"\" className=\"white\">\r\n          <h3 className=\"grey-text text-darken-3\">Sign Up</h3>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input id=\"email\" type=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input id=\"password\" type=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input id=\"firstName\" type=\"text\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input id=\"lastName\" type=\"text\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport Navbar from \"./components/layout/Navbar\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport CreateProject from \"./components/projects/CreateProject\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n  authError: null,\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"login error\");\r\n      return { ...state, authError: \"Login Failed\" };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"login success\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"signout success\");\r\n      return state;\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"signup error\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    { id: \"1\", title: \"help me find peach\", content: \"blah blah blah\" },\r\n    { id: \"2\", title: \"collect all the stars\", content: \"blah blah blah\" },\r\n    { id: \"3\", title: \"egg hunt with yoshi\", content: \"blah blah blah\" },\r\n  ],\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"created project\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"create project error\", action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firebase: firebaseReducer, // for firebase auth\r\n  firestore: firestoreReducer, // for firestore database\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCrKcAA77TyA6J8l9F29he9cGRBZ6dEdZw\",\r\n  authDomain: \"mario-plan-c9c35.firebaseapp.com\",\r\n  databaseURL: \"https://mario-plan-c9c35.firebaseio.com\",\r\n  projectId: \"mario-plan-c9c35\",\r\n  storageBucket: \"mario-plan-c9c35.appspot.com\",\r\n  messagingSenderId: \"1028131747637\",\r\n  appId: \"1:1028131747637:web:c26bc155f9f59422fe7e7c\",\r\n  measurementId: \"G-S8BK40JP5K\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider, useSelector } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./store/reducers/rootReducer\";\n\nimport {\n  createFirestoreInstance,\n  reduxFirestore,\n  getFirestore,\n} from \"redux-firestore\";\nimport {\n  ReactReduxFirebaseProvider,\n  getFirebase,\n  isLoaded,\n} from \"react-redux-firebase\";\n\nimport firebase from \"./config/fbConfig\";\nimport \"firebase/firestore\";\n\n//! Also updated the code in rootreducer\n//* Firebase related data are stored in fbConfig,index.js,rootreducer,projectAction\n//! This section of the code is updated\nconst rrfConfig = {\n  userProfile: \"users\", // tells firebase to look into users collection to find the current user information\n  useFirestoreForProfile: true,\n};\n///////////////////////////\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase)\n  )\n);\n\n//! This section of the code is updated\nconst rffProps = {\n  firebase,\n  useFirestoreForProfile: true,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n//////////////////////////////////\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector((state) => state.firebase.auth);\n  if (!isLoaded(auth))\n    return (\n      <div className=\"loading\">\n        <p>Loading...</p>\n      </div>\n    );\n  return children;\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rffProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}